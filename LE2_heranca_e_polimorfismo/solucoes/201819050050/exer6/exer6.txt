Em java a palavra protected é um dos modificadores de acesso, assim como public e private. Um método ou atributo protected pode ser acessado por classes do mesmo pacote ou por outras classes através da herança. Utilizar acesso protected oferece um nível intermediário de acesso entre public e private. 
	O ganho de utilizar atributos protected está em poder acessá-los diretamente das subclasses que os herdaram, permitindo assim sua manipulação. Além disso, diferente dos atributos e métodos public, apenas classes que estendem da superclasse que possui os atributos protected tem acesso a eles, evitando assim, o acesso irrestrito a essas variáveis.
	As desvantagens estão no aumento significativo nas chances de erros e inconsistências na implementação de subclasses. O objeto de subclasse pode configurar o valor de uma variável herdada diretamente sem utilizar um método set. Portanto, um objeto de subclasse pode atribuir um valor inválido à variável, o que que pode levar a uma inconsistência no objeto. Além disso, os membros protected de uma classe são visíveis a todas aquelas do mesmo pacote, o que nem sempre é desejável.
	Uma maneira alternativa para lidar com atributos em herança é usar atributos privados na superclasse e métodos não privados para obter ou modificar valores nas subclasses. e.g. set, get, toString, is.

